{"version":3,"sources":["utilities/ActionUtility.ts","utilities/EffectUtility.ts","api/remoteApi.ts","store/users/UsersEffect.ts","store/todos/TodosEffect.ts","store/ui/users-page/UsersPageAction.ts","views/users-page/components/UserCard.tsx","views/users-page/components/UsersList.tsx","store/todos/TodosAction.ts","views/users-page/components/TodoCard.tsx","constants/Status.ts","views/components/Header.tsx","views/components/ProgressSpinner.tsx","views/users-page/components/TodoList.tsx","views/users-page/UsersPage.tsx","views/App.tsx","store/users/UsersReducer.ts","store/ui/users-page/UsersPageReducer.ts","store/todos/TodosReducer.ts","store/rootReducer.ts","store/rootStore.ts","index.tsx"],"names":["ActionUtility","type","payload","EffectUtility","actionType","effect","dispatch","a","createAction","response","status","data","statusText","logError","message","error","console","log","headers","request","config","remoteApi","axios","create","baseURL","fetchUsers","get","UsersEffect","createEffect","FETCH_USERS","FETCH_USERS_SUCCESS","FETCH_USERS_FAILED","TodosEffect","id","FETCH_TODOS","fetchTodos","FETCH_TODOS_SUCCESS","FETCH_TODOS_FAILED","UsersPageAction","SELECTED_USER","useStyles","makeStyles","card","backgroundColor","cardSelected","email","marginBottom","connect","state","ui","usersPage","props","user","name","phone","website","classes","Card","variant","className","selectedUser","onClick","selectUser","getTodos","CardContent","Typography","component","color","root","maxHeight","width","overflow","scrollbarWidth","msOverflowStyle","display","users","values","Paper","elevation","map","key","TodosAction","completed","IS_COMPLETED","Status","alignItems","button","todo","IconButton","setCompleted","disableRipple","style","padding","title","justifyContent","fontWeight","Header","ProgressSpinner","CircularProgress","size","todos","BUSY","SUCCESS","useEffect","getUsers","Container","fixed","App","exact","path","INITIAL_STATE","INIT","combineReducers","action","keyBy","FAILED","merge","createStore","rootReducer","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","store","rootStore","document","getElementById"],"mappings":"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","file":"static/js/main.48bcc1f0.chunk.js","sourcesContent":["import Action from \"../models/Action\";\n\nexport default class ActionUtility {\n    public static createAction<T>(type: string, payload?: T): Action<T> {\n        return {\n            type,\n            payload\n        }\n    }\n}\n","import ActionUtility from \"./ActionUtility\";\nimport {AxiosError, AxiosResponse} from \"axios\";\nimport {ThunkAction} from \"@reduxjs/toolkit\";\nimport Store from \"../models/Store\";\nimport Action from \"../models/Action\";\n\nexport default class EffectUtility {\n    public static createEffect<ResultType>(actionType: string,\n                                           effect: () => Promise<AxiosResponse<ResultType>>): ThunkAction<void, Store, unknown, Action<any>> {\n        return async dispatch => {\n            dispatch(ActionUtility.createAction(actionType));\n\n            try {\n                const response: AxiosResponse<ResultType> = await effect();\n                if(response.status === 200) {\n                    dispatch(ActionUtility.createAction(`${actionType}_SUCCESS`, response.data as ResultType));\n                } else {\n                    // TODO custom messages for error codes\n                    dispatch(ActionUtility.createAction(`${actionType}_FAILED`, response.statusText));\n                }\n            } catch (error) {\n                this.logError(error);\n                dispatch(ActionUtility.createAction(`${actionType}_FAILED`, error.message));\n            }\n        }\n    }\n\n    private static logError<T>(error: AxiosError<T>) {\n        // TODO - https://github.com/axios/axios/pull/2014\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(error.request);\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error', error.message);\n        }\n        console.log(error.config);\n    }\n}\n\n","import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\nimport User from \"../models/User\";\nimport Todo from \"../models/Todo\";\n\nconst remoteApi: AxiosInstance = axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com/',\n} as AxiosRequestConfig);\n\n\nexport const fetchUsers = (): Promise<AxiosResponse<User[]>> => {\n    return remoteApi.get('users');\n};\n\n\nexport const fetchTodos = (id: number): Promise<AxiosResponse<Todo[]>> => {\n    return remoteApi.get(`users/${id}/todos`);\n};\n","import EffectUtility from \"../../utilities/EffectUtility\";\nimport {fetchUsers} from '../../api/remoteApi'\nimport User from \"../../models/User\";\n\n\nexport default class UsersEffect {\n    public static readonly FETCH_USERS = \"UsersEffect.FETCH_USERS\";\n    public static readonly FETCH_USERS_SUCCESS = \"UsersEffect.FETCH_USERS_SUCCESS\";\n    public static readonly FETCH_USERS_FAILED = \"UsersEffect.FETCH_USERS_FAILED\";\n\n    public static getUsers() {\n        return EffectUtility.createEffect<User[]>(UsersEffect.FETCH_USERS, fetchUsers);\n    }\n}\n","import EffectUtility from \"../../utilities/EffectUtility\";\nimport {fetchTodos} from '../../api/remoteApi'\nimport Todo from \"../../models/Todo\";\n\nexport default class TodosEffect {\n    public static readonly FETCH_TODOS = \"TodosEffect.FETCH_TODOS\";\n    public static readonly FETCH_TODOS_SUCCESS = \"TodosEffect.FETCH_TODOS_SUCCESS\";\n    public static readonly FETCH_TODOS_FAILED = \"TodosEffect.FETCH_TODOS_FAILED\";\n\n    public static getTodos(id: number) {\n        return EffectUtility.createEffect<Todo[]>(TodosEffect.FETCH_TODOS, () => fetchTodos(id));\n    }\n}\n","import ActionUtility from \"../../../utilities/ActionUtility\";\n\nexport default class UsersPageAction {\n    public static readonly SELECTED_USER = \"UsersPageAction.SELECTED_USER\";\n\n    public static selectUser(id: number) {\n        return ActionUtility.createAction(UsersPageAction.SELECTED_USER, id);\n    }\n}\n","import React from 'react';\nimport User from \"../../../models/User\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {connect} from \"react-redux\";\nimport TodosEffect from \"../../../store/todos/TodosEffect\";\nimport UsersPageAction from \"../../../store/ui/users-page/UsersPageAction\";\nimport Store from \"../../../models/Store\";\nimport UsersPageState from \"../../../store/ui/users-page/models/UsersPageState\";\n\ntype IProps = UsersPageState & {\n    user: User\n    dispatch: any\n}\n\nconst UserCard: React.FunctionComponent<IProps> = (props) => {\n    const {\n        user: {name, email, phone, website, id},\n        dispatch\n    } = props;\n\n    const classes = useStyles();\n\n    return (\n        <Card variant=\"outlined\"\n              className={props.selectedUser === id ? classes.cardSelected : classes.card}\n              onClick={() => {\n                  dispatch(UsersPageAction.selectUser(id));\n                  dispatch(TodosEffect.getTodos(id));\n              }}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {name}\n                </Typography>\n                <Typography className={classes.email} color=\"textSecondary\">\n                    {email}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    {phone}\n                    <br />\n                    {website}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst useStyles = makeStyles({\n    card: {\n        backgroundColor: '#f2f8ff'\n    },\n    cardSelected: {\n        backgroundColor: '#9bd0ff'\n    },\n    email: {\n        marginBottom: 12,\n    },\n});\n\nconst mapStateToProps = (state: Store) => {\n    return {\n        ...state.ui.usersPage\n    }\n};\n\nexport default connect(mapStateToProps)(UserCard);\n","import React from \"react\";\nimport UserCard from \"./UserCard\";\nimport Paper from \"@material-ui/core/Paper\";\nimport User from \"../../../models/User\";\nimport Store from \"../../../models/Store\";\nimport {connect} from \"react-redux\";\nimport {values} from \"lodash\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\ntype IProps = {\n    users: User[]\n}\n\nconst UsersList: React.FunctionComponent<IProps> = ({users}) => {\n    const classes = useStyles();\n    return (\n        <Paper elevation={3} className={classes.root}>\n            {\n                users.map(user => {\n                    return (\n                        <UserCard user={user} key={user.id}/>\n                    );\n                })\n            }\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles({\n    root: {\n        maxHeight: 800,\n        width: 300,\n        overflow: 'auto',\n        scrollbarWidth: 'none',     // hide scroll bar - Firefox\n        msOverflowStyle: 'none',    // hide scroll bar - IE, Edge\n        '&::-webkit-scrollbar': {   // hide scroll bar - Chrome, Safari and Opera\n            display: 'none'\n        }\n    },\n});\n\nconst mapStateToProps = (state: Store) => {\n    return {\n        users: values(state.users.data)\n    };\n};\n\nexport default connect(mapStateToProps)(UsersList)\n","import ActionUtility from \"../../utilities/ActionUtility\";\n\nexport default class TodosAction {\n    public static readonly IS_COMPLETED = \"TodosAction.IS_COMPLETED\";\n\n    public static setCompleted(id: number, completed: boolean) {\n        return ActionUtility.createAction(TodosAction.IS_COMPLETED, {id, completed}) as IsTodoCompletedAction;\n    }\n}\n\ninterface IsTodoCompletedAction {\n    type: typeof TodosAction.IS_COMPLETED,\n    payload: {\n        id: number\n        completed: boolean\n    }\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Todo from \"../../../models/Todo\";\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport IconButton from '@material-ui/core/IconButton';\nimport {connect} from \"react-redux\";\nimport TodosAction from \"../../../store/todos/TodosAction\";\n\ninterface IProps {\n    todo: Todo\n    dispatch: any\n}\n\nconst TodoCard: React.FunctionComponent<IProps> = (props) => {\n    const classes = useStyles();\n    const {todo: {id, completed}} = props;\n\n    return (\n        <div className={classes.root}>\n            <IconButton onClick={() => props.dispatch(TodosAction.setCompleted(id, !completed))} disableRipple className={classes.button}>\n                { props.todo.completed ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon /> }\n            </IconButton>\n            {\n                <div style={{padding: 5}} >\n                    { props.todo.title }\n                </div>\n            }\n        </div>\n    );\n};\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    button: {\n        \"&:hover\": {\n            backgroundColor: \"transparent\"\n        }\n    }\n});\n\nexport default connect()(TodoCard);\n","enum Status {\n    INIT = 'INIT',\n    BUSY = 'BUSY',\n    FAILED = 'FAILED',\n    SUCCESS = 'SUCCESS'\n}\n\nexport default Status;\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nfunction Header({title}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            { title }\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        fontWeight: 'bold',\n        padding: 10\n    }\n});\n\nexport default Header;\n","import {CircularProgress} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst ProgressSpinner = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root} >\n            <CircularProgress size='3rem' />\n        </div>\n    );\n};\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 300\n    }\n});\n\nexport default ProgressSpinner;\n\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TodoCard from \"./TodoCard\";\nimport Todo from \"../../../models/Todo\";\nimport Store from \"../../../models/Store\";\nimport {connect} from \"react-redux\";\nimport {values} from \"lodash\";\nimport Status from \"../../../constants/Status\";\nimport Header from \"../../components/Header\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ProgressSpinner from \"../../components/ProgressSpinner\";\n\ntype IProps = {\n    todos: Todo[]\n    status: Status\n}\n\nconst TodoList: React.FunctionComponent<IProps> = ({todos, status}) => {\n    const classes = useStyles();\n\n    if(status === Status.BUSY) {\n        return <ProgressSpinner />\n    } else if (status === Status.SUCCESS) {\n        return <Paper elevation={3} className={classes.root}>\n                    <Header title=\"To do\" />\n                    {\n                        todos.map(todo => {\n                            return (\n                                <TodoCard todo={todo} key={todo.id}/>\n                            );\n                        })\n                    }\n                </Paper>\n    } else {\n        return <div />\n    }\n};\n\nconst useStyles = makeStyles({\n    root: {\n        maxHeight: 800,\n        width: 300,\n        overflow: 'auto'\n    }\n});\n\nconst mapStateToProps = (state: Store) => {\n    return {\n        todos: values(state.todos.data),\n        status: state.todos.status\n    };\n};\n\nexport default connect(mapStateToProps)(TodoList);\n","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport UsersEffect from \"../../store/users/UsersEffect\";\nimport {Container} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport UsersList from \"./components/UsersList\";\nimport TodoList from \"./components/TodoList\";\n\ninterface IProps {\n    dispatch: any\n}\n\nconst UsersPage: React.FunctionComponent<IProps> = (props) => {\n    const classes = useStyles();\n\n    useEffect(() => {\n        props.dispatch(UsersEffect.getUsers())\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <Container fixed className={classes.root}>\n            <UsersList />\n            <TodoList />\n        </Container>\n    );\n};\n\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex'\n    },\n});\n\n\nexport default connect()(UsersPage);\n","import React from 'react';\nimport UsersPage from \"./users-page/UsersPage\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/react-redux-template\">\n              <UsersPage />\n            </Route>\n          </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","import Action from \"../../models/Action\";\nimport UsersState from \"./models/UsersState\";\nimport Status from \"../../constants/Status\";\nimport UsersEffect from \"./UsersEffect\";\nimport User from \"../../models/User\";\nimport {keyBy} from 'lodash'\n\nconst INITIAL_STATE = {\n    data: {},\n    status: Status.INIT\n};\n\nexport default (state = INITIAL_STATE, action: Action<any>): UsersState => {\n    switch(action.type) {\n        case UsersEffect.FETCH_USERS:\n            return {...INITIAL_STATE, status: Status.BUSY};\n        case UsersEffect.FETCH_USERS_SUCCESS:\n            return {...state, status: Status.SUCCESS, data: keyBy(action.payload as User[], 'id')};\n        case UsersEffect.FETCH_USERS_FAILED:\n            return {...state, status: Status.FAILED};\n        default:\n            return state;\n    }\n};\n","import UsersPageState from \"./models/UsersPageState\";\nimport Action from \"../../../models/Action\";\nimport UsersPageAction from \"./UsersPageAction\";\n\nconst INITIAL_STATE = {\n};\n\nexport default (state = INITIAL_STATE, action: Action<any>): UsersPageState => {\n    switch(action.type) {\n        case UsersPageAction.SELECTED_USER:\n            return {...state, selectedUser: action.payload};\n        default:\n            return state;\n    }\n};\n","import Action from \"../../models/Action\";\nimport Status from \"../../constants/Status\";\nimport TodosState from \"./models/TodosState\";\nimport Todo from \"../../models/Todo\";\nimport TodosEffect from \"./TodosEffect\";\nimport TodosAction from \"./TodosAction\";\nimport {keyBy, merge} from 'lodash';\n\nconst INITIAL_STATE = {\n    data: {},\n    status: Status.INIT\n};\n\nexport default (state = INITIAL_STATE, action: Action<any>): TodosState => {\n    switch(action.type) {\n        case TodosEffect.FETCH_TODOS:\n            return {...INITIAL_STATE, status: Status.BUSY};\n        case TodosEffect.FETCH_TODOS_SUCCESS:\n            return {...state, status: Status.SUCCESS, data: keyBy(action.payload as Todo[], 'id')};\n        case TodosEffect.FETCH_TODOS_FAILED:\n            return {...state, status: Status.FAILED};\n        case TodosAction.IS_COMPLETED:\n            return merge({}, state, {\n                data: {\n                    [action.payload.id]: {completed: action.payload.completed}\n                }\n            });\n        default:\n            return state;\n    }\n};\n","import {combineReducers} from 'redux'\nimport RootStore from \"../models/Store\";\nimport UsersReducer from \"./users/UsersReducer\";\nimport UsersPageReducer from \"./ui/users-page/UsersPageReducer\";\nimport TodosReducer from \"./todos/TodosReducer\";\n\nexport default combineReducers<RootStore>({\n    users: UsersReducer,\n    todos: TodosReducer,\n    ui: combineReducers({\n        usersPage: UsersPageReducer\n    })\n});\n","import {applyMiddleware, createStore, Store} from 'redux';\nimport RootStore from \"../models/Store\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from \"./rootReducer\";\n\nexport default createStore(rootReducer, composeWithDevTools({})(\n   applyMiddleware(reduxThunk)\n)) as Store<RootStore>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/App';\nimport {Provider} from \"react-redux\";\nimport rootStore from \"./store/rootStore\"\n\nReactDOM.render(\n    <Provider store={rootStore}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}